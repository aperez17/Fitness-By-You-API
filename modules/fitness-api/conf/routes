# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

GET     /api/workouts/hardcoded @api.controllers.WorkoutController.getHardcoded()
GET     /api/workouts/:id       @api.controllers.WorkoutController.get(id: String)
POST    /api/workouts/populate  @api.controllers.WorkoutController.populate()
GET     /api/workouts           @api.controllers.WorkoutController.search(q: String)
POST    /api/workouts/create    @api.controllers.WorkoutController.createWorkout()

POST    /api/users/populate     @api.controllers.UserController.populate()
GET     /api/users              @api.controllers.UserController.search(q: String)
POST    /api/users/create       @api.controllers.UserController.createUser()

POST    /api/login/authenticate @api.controllers.UserController.authenticate()
GET		/api/login/logout	 	@api.controllers.UserController.logout()

# Home page
GET         /                                controllers.ApplicationController.index
GET         /signOut                         controllers.ApplicationController.signOut
GET         /authenticate/:provider          controllers.SocialAuthController.authenticate(provider)

GET         /signUp                          controllers.SignUpController.view
POST        /signUp                          controllers.SignUpController.submit

GET         /signIn                          controllers.SignInController.view
POST        /signIn                          controllers.SignInController.submit

GET         /password/forgot                 controllers.ForgotPasswordController.view
POST        /password/forgot                 controllers.ForgotPasswordController.submit
GET         /password/reset/:token           controllers.ResetPasswordController.view(token: java.util.UUID)
POST        /password/reset/:token           controllers.ResetPasswordController.submit(token: java.util.UUID)
GET         /password/change                 controllers.ChangePasswordController.view
POST        /password/change                 controllers.ChangePasswordController.submit

GET         /account/email/:email            controllers.ActivateAccountController.send(email: String)
GET         /account/activate/:token         controllers.ActivateAccountController.activate(token: java.util.UUID)

# Map static resources from the /public folder to the /assets URL path
GET         /assets/*file                    controllers.Assets.versioned(file)
->          /webjars                         webjars.Routes